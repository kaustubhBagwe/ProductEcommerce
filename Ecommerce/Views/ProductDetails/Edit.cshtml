@model Ecommerce.Models.Admin.ProductDetails

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
<script src="https://cloud.tinymce.com/5/tinymce.min.js?apiKey=hq6w53p42k1mxfbsg7sydub9d1m4cvi1poz7hgrgd05kcwuq"></script>
<script>tinymce.init({ selector:'textarea' });</script>
<script src="~/Scripts/jquery-1.10.2.js"></script>
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<style>
    /* Note: Try to remove the following lines to see the effect of CSS positioning */
    .affix {
        top: 20px;
        z-index: 9999 !important;
    }

    .fullwidth {
        width: 100%;
        padding: 10px;
        cursor: pointer;
        text-decoration: none;
    }

    .fullwidthactive {
        width: 100%;
        padding: 10px;
        background: #fff;
        border-radius: 5px 0px 0px 5px;
        border: 1px solid #c5c5c5;
        color: #333;
        text-decoration: none;
        cursor: pointer;
        border-right: none;
        border-left: 2px solid #0081de;
    }
     

        .fullwidthactive a {
            color: #333;
            text-decoration: none;
        }

    .fullwidth:hover {
        border-radius: 5px;
        background: #d0cccc;
        color: #fff;
    }

    .fullwidth a {
        color: #333;
        text-decoration: none;
    }
</style>
<div class="container-fluid">
    <ol class="breadcrumb">
        <li class="breadcrumb-item">
            <a href="/Dashbord/Index">Dashbord</a>
        </li>
        <li class="breadcrumb-item">
            <a href="/Dashbord/productdetails">Product Details</a>
        </li>
        <li class="breadcrumb-item active">Edit</li>
    </ol>

    <div class="col-md-12">
        <div class="row">
            <nav class="col-sm-3">
                <ul class="nav nav-pills nav-stacked" data-spy="affix" data-offset-top="205">
                    <li class="active fullwidthactive tablinks" onclick="openCity(event, 'ProductDetails')" id="defaultOpen"><a href="#section1"><i class="fa fa-info-circle" aria-hidden="true"></i> Product Details</a></li>
                    <li class="fullwidth tablinks"><a href="#section2" onclick="openCity(event, 'Price')"><i class="fa fa-dollar" aria-hidden="true"></i> Price</a></li>
                    <li class="fullwidth tablinks"><a href="#section3" onclick="openCity(event, 'Pictures')"><i class="fa fa-file-image" aria-hidden="true"></i> Pictures</a></li>
                    <li class="fullwidth tablinks"><a href="#section3" onclick="openCity(event, 'Category')"><i class="fa fa-code-fork" aria-hidden="true"></i> Category</a></li>
                    <li class="fullwidth tablinks"><a href="#section3" onclick="openCity(event, 'Manufacture')"><i class="fa fa-truck" aria-hidden="true"></i> Manufacture</a></li>
                    <li class="fullwidth tablinks"><a href="#section3" onclick="openCity(event, 'SEO')"><i class="fa fa-connectdevelop" aria-hidden="true"></i> SEO</a></li>
                    <li class="fullwidth tablinks"><a href="#section3" onclick="openCity(event, 'Publish')"><i class="fa fa-eye-slash" aria-hidden="true"></i> Publish</a></li>
                </ul>
            </nav>
            <div class="col-sm-9">
                @using (Html.BeginForm())
                {
                    <div style="width:100%">
                        <div style="display:inline-block;float:left;width:30%;">
                            <span style="font-size: 28px;font-weight: 600;color: #007ee6;">Product Details</span>
                           <small>@Model.InsertDate.ToString()</small>
                        </div>
                        <div style="display:inline-block;  width:70%;  float: unset;">
                            <button type="submit" class="form-control" style="background-color:#28a745;border:none;color:#fff;font-weight:bold;width:20%;display:inline-block;float: right;border-radius:0px;cursor:pointer">
                                <i class="fa fa-check" aria-hidden="true"></i> Save
                            </button>
                          
                            <a class="form-control" style="background-color:#cbc9c9;border:none;color:#333;font-weight:bold;width:20%;display:inline-block;text-align:center;text-decoration:none;border-radius:0px;float: right;cursor:pointer;" target="_blank" href="http://localhost:36906/product/details/1"><i class="fa fa-eye" aria-hidden="true"></i> Preview</a>
                            <a class="form-control" style="background-color:#c70707;border:none;color:#fff;font-weight:bold;width:20%;display:inline-block;text-align:center;text-decoration:none;border-radius:0px;float: right;cursor:pointer;" ><i class="fa fa-trash" aria-hidden="true"></i> Delete</a>
                           
                        </div>

                    </div>
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.ProductID)
                    <div class="form-horizontal tabcontent" id="ProductDetails">
                       
                        <hr />
                        <div style="height:400px;overflow:auto">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group">
                                @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.ProductCode, htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.ProductCode, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ProductCode, "", new { @class = "text-danger" })
                                </div>
                            </div>


                            <div class="form-group">
                                @Html.LabelFor(model => model.ShortDescription, htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.ShortDescription, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ShortDescription, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.ProductDescription, htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    <textarea id="ProductDescription" name="ProductDescription" class="form-control" placeholder="Add Description">@Model.ProductDescription</textarea>
                                    @*@Html.EditorFor(model => model.ProductDescription, new { htmlAttributes = new { @class = "form-control" } })*@
                                    @Html.ValidationMessageFor(model => model.ProductDescription, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.StoreID, htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.StoreID, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.StoreID, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.ProdreferencetID, htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.ProdreferencetID, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ProdreferencetID, "", new { @class = "text-danger" })
                                </div>
                            </div>

                          
                            <div class="form-group">
                                @Html.LabelFor(model => model.GTIN, htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.GTIN, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.GTIN, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Customs_Tariff_Number, htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Customs_Tariff_Number, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Customs_Tariff_Number, "", new { @class = "text-danger" })
                                </div>
                            </div>
                           

                            <div class="form-group">
                                @Html.LabelFor(model => model.ProductSize, htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    @Html.DropDownListFor(x => Model.ProductSize, new SelectList(ViewBag._size_RK, "SizeID", "SizeName"), htmlAttributes: new { @class = "form-control", id = "ProductSize" })
                                    @Html.ValidationMessageFor(model => model.ProductSize, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.ProductColor, htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.ProductColor, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ProductColor, "", new { @class = "text-danger" })
                                </div>
                            </div>

                          

                            <div class="form-group">
                                @Html.LabelFor(model => model.ProductQuantity, htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.ProductQuantity, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ProductQuantity, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.ProductTag, htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.ProductTag, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ProductTag, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.ProductSKUCode, htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.ProductSKUCode, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ProductSKUCode, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.ProductMetatagdescription, htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.ProductMetatagdescription, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ProductMetatagdescription, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.ProductMetatagKey, htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.ProductMetatagKey, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ProductMetatagKey, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.ProductMetataAuthor, htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.ProductMetataAuthor, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ProductMetataAuthor, "", new { @class = "text-danger" })
                                </div>
                            </div>

                         

                            <div class="form-group">
                                @Html.LabelFor(model => model.CID, htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.CID, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.CID, "", new { @class = "text-danger" })
                                </div>
                            </div>

                          

                           
                            <div class="form-group">
                                @Html.LabelFor(model => model.ProductWeight, htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.ProductWeight, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ProductWeight, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.DelieveryTime, htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.DelieveryTime, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.DelieveryTime, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.IsShowonHomePage, htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.IsShowonHomePage)
                                        @Html.ValidationMessageFor(model => model.IsShowonHomePage, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.IsFreeShiping, htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.IsFreeShiping)
                                        @Html.ValidationMessageFor(model => model.IsFreeShiping, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.IsBuybuttonAvail, htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.IsBuybuttonAvail)
                                        @Html.ValidationMessageFor(model => model.IsBuybuttonAvail, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.IsWishListbuttonAvail, htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.IsWishListbuttonAvail)
                                        @Html.ValidationMessageFor(model => model.IsWishListbuttonAvail, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.IsCallForPriceAvail, htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.IsCallForPriceAvail)
                                        @Html.ValidationMessageFor(model => model.IsCallForPriceAvail, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>


                            <div class="form-group">
                                @Html.LabelFor(model => model.IsAllowedforCustomerReviews, htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.IsAllowedforCustomerReviews)
                                        @Html.ValidationMessageFor(model => model.IsAllowedforCustomerReviews, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                           
                            <div class="form-group">
                                @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.IsActive)
                                        @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>



                            @*<div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <input type="submit" value="Create" class="btn btn-default" />
                                    </div>
                                </div>*@
                        </div>
                    </div>
                    <div class="tabcontent" id="Price">
                        @*<span style="font-size: 28px;font-weight: 600;color: #007ee6;">
                            Price
                        </span>*@
                        <div >
                            <div class="form-group">
                                @Html.LabelFor(model => model.ProductPrice, htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.ProductPrice, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ProductPrice, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.OldPrice, htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.OldPrice, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.OldPrice, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.VAT, htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.VAT, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.VAT, "", new { @class = "text-danger" })
                                </div>
                            </div>

                        </div>
                    </div>
                    <div class="tabcontent" id="Pictures">
                        <br />
                        <div class="col-sm-12">
                            <div class="col-sm-4">
                                <input type="file" name="imgInp"  id="imgInp"><br><br>
                                <img id="blah" src="#" alt="your image" style="min-height:150px;max-height:150px"/>
                                <br><br>
                                <button>Add ></button>
                            </div>
                            <div class="col-sm-6" style="width:100%;border:1px solid #007ee6;height:100%">
                                
                            </div>
                        </div>
                        
                        
                    </div>
                    <div class="tabcontent" id="Category">
                        @*<span style="font-size: 28px;font-weight: 600;color: #007ee6;">
                            Category
                        </span>*@
                        <div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.ProductCategory, htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.ProductCategory, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ProductCategory, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.ProductSubCategory, htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.ProductSubCategory, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ProductSubCategory, "", new { @class = "text-danger" })
                                </div>
                            </div>

                        </div>
                    </div>
                    <div class="tabcontent" id="Manufacture">
                        @*<span style="font-size: 28px;font-weight: 600;color: #007ee6;">
                            Manufacture
                        </span>*@
                        <div >
                            <div class="form-group">
                                @Html.LabelFor(model => model.ProductBrand, htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.ProductBrand, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ProductBrand, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="tabcontent" id="SEO">
                        @*<span style="font-size: 28px;font-weight: 600;color: #007ee6;">
                            SEO
                        </span>*@
                        <div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.ProductMetatagdescription, htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.ProductMetatagdescription, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ProductMetatagdescription, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.ProductMetatagKey, htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.ProductMetatagKey, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ProductMetatagKey, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.ProductMetataAuthor, htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.ProductMetataAuthor, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ProductMetataAuthor, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.URLAlias, htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.URLAlias, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.URLAlias, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="tabcontent" id="Publish">
                       
                        <div >
                            <div class="checkbox">
                                @Html.EditorFor(model => model.IsPublished)
                                @Html.ValidationMessageFor(model => model.IsPublished, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
<style>
    /* Style the tab */
    .tab {
        float: left;
        border: 1px solid #ccc;
        background-color: #f1f1f1;
        width: 30%;
        height: 300px;
    }

        /* Style the buttons inside the tab */
        .tab button {
            display: block;
            background-color: inherit;
            color: black;
            padding: 22px 16px;
            width: 100%;
            border: none;
            outline: none;
            text-align: left;
            cursor: pointer;
            transition: 0.3s;
            font-size: 17px;
        }

            /* Change background color of buttons on hover */
            .tab button:hover {
                background-color: #ddd;
            }

            /* Create an active/current "tab button" class */
            .tab button.active {
                background-color: #ccc;
            }

    /* Style the tab content */
    .tabcontent {
        float: left;
        width: 100%;
    }
</style>
<script>

    function readURL(input) {

        if (input.files && input.files[0]) {
            var reader = new FileReader();

            reader.onload = function (e) {
                $('#blah').attr('src', e.target.result);
            }

            reader.readAsDataURL(input.files[0]);
        }
    }

    $("#imgInp").change(function () {
        readURL(this);
    });

    function openCity(evt, cityName) {
        debugger
        var i, tabcontent, tablinks;
        tabcontent = document.getElementsByClassName("tabcontent");
        for (i = 0; i < tabcontent.length; i++) {
            tabcontent[i].style.display = "none";
        }
        tablinks = document.getElementsByClassName("tablinks");
        for (i = 0; i < tablinks.length; i++) {
            tablinks[i].className = tablinks[i].className.replace(" fullwidthactive", "");
        }
        document.getElementById(cityName).style.display = "block";
        evt.currentTarget.className += " fullwidthactive";
    }

    // Get the element with id="defaultOpen" and click on it
    document.getElementById("defaultOpen").click();
</script>